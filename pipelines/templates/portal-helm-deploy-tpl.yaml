##======================================================
## Used pipeline variables
##  - azureSubscription
##  - keyVaultName
##  - rgName
##  - aksName
##======================================================
parameters:
- name: ingressHostName
  displayName: 'Ingress rule hostname'
  type: string
  default: 'test.host.local'

- name: keyVaultPrefix
  displayName: 'KeyVault secrets prefix'
  type: string
  default: 'test-'

- name: releaseName
  displayName: 'Helm release name'
  type: string
  default: 'joinrpg-portal'

- name: namespace
  displayName: 'K8s namespace '
  type: string
  default: 'default'

- name: environment
  displayName: 'DevOps Environment'
  type: string
  default: 'default'

- name: name
  displayName: 'Deployment job name'
  type: string
  default: 'Deploy'

- name: displayName
  displayName: 'Deployment job name'
  type: string
  default: 'Deployment'

- name: chartRegistry
  displayName: 'Helm chart registry'
  type: string
  default: 'joinrpg.azurecr.io'

- name: chartName
  displayName: 'Helm chart name with path'
  type: string
  default: 'helm-charts/joinrpg-portal'

- name: chartVersion
  displayName: 'Helm chart version (tag)'
  type: string
  default: '1.1.0'

- name: imageTag
  displayName: 'Tag of the image to deploy'
  type: string
  default: ''

jobs:
- deployment: ${{ parameters.name }}
  displayName: ${{ parameters.displayName }}
  environment: ${{ parameters.environment }}
  pool:
    vmImage: $(buildVmImageName)
  strategy:
    runOnce:
      deploy:
        steps:
        ##===========================
        ## Git checkout
        ##===========================
        - checkout: self 
        ##===========================
        ## Print parameters
        ##===========================
        - pwsh: |
            Write-Host "Deployment parameters"
            $tplParams = @{ 
              imageTag = "${{ parameters.imageTag }}"
              ingressHostName = "${{ parameters.ingressHostName }}"; 
              keyVaultPrefix = "${{ parameters.keyVaultPrefix }}"; 
              releaseName = "${{ parameters.releaseName }}"; 
              namespace = "${{ parameters.namespace }}"; 
              environment = "${{ parameters.environment }}"
              chartRegistry = "${{ parameters.chartRegistry }}"
              chartName = "${{ parameters.chartName }}"
              chartVersion = "${{ parameters.chartVersion }}"
            }
            $tplParams | ft 
          displayName: Print deploy parameters
          name: printParameters
        ##===========================
        ## Install tools
        ##===========================
        - task: HelmInstaller@1
          displayName: Install Helm
          inputs:
            helmVersionToInstall: "3.7.1"

        ##==========================================================================
        ## Get secrets from KeyVault and prepare parameters for Helm chart deploy
        ##==========================================================================
        - task: AzurePowerShell@4
          displayName: Get values for Chart deployment
          inputs:
            azureSubscription: $(azureSubscription)
            azurePowerShellVersion: LatestVersion
            ScriptType: FilePath
            ScriptPath: $(Build.SourcesDirectory)/scripts/portal/Prepare-ChartValues.ps1
            scriptArguments:
              -ImageTag '${{ parameters.imageTag }}'
              -VaultName '$(keyVaultName)'
              -Prefix '${{ parameters.keyVaultPrefix }}'
              -Path '$(Pipeline.Workspace)/deploy-values.yaml'
              -IngressHost '${{ parameters.ingressHostName }}'

        ##==========================================================================
        ## Run DB migration tool
        ##==========================================================================          
        - task: Docker@2
          displayName: "Run DB migration tool"
          inputs:
            command: run
            containerRegistry: $(registryServiceConnection)
            arguments: --rm -e ConnectionStrings__DefaultConnection="$(DefaultConnection)" $(containerRegistry)/$(migratorImageName):${{ parameters.imageTag }}
          
        ##==========================================================================
        ## Deploy Helm chart
        ##==========================================================================
        - task: HelmDeploy@0
          displayName: Install/Upgdare application (Helm)
          inputs:
            connectionType: Azure Resource Manager
            azureSubscriptionEndpoint: $(azureSubscription)
            azureResourceGroup: $(rgName)
            kubernetesCluster: $(aksName)
            useClusterAdmin: true            
            namespace: ${{ parameters.namespace }}
            command: upgrade
            chartName: ${{ parameters.chartRegistry }}/${{ parameters.chartName }}
            valueFile: $(Pipeline.Workspace)/deploy-values.yaml
            releaseName: ${{ parameters.releaseName }}
            install: true
            force: false
            waitForExecution: true
            arguments: --version ${{ parameters.chartVersion }}
